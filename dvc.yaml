vars:
  - params.yaml

stages:
  data_loader:
    cmd: python -m src.main --stage data_loader
    deps:
      - src/data/data_loader.py
      - ${data.raw_path}
    outs:
      - ${data.processed_path}

  feature_engineering:
    cmd: python -m src.main --stage feature_engineering
    deps:
      - src/data/feature_engineer.py
      - ${data.processed_path}
    outs:
      - data/interim/features.csv

  train:
    cmd: python -m src.main --stage train
    deps:
      - src/models/xgboost_model/model_trainer.py
      - src/models/random_forest_model/model_trainer.py
      - src/models/linear_regression_model/model_trainer.py
      - data/interim/features.csv
    params:
      - train.model_type
      - train.cv_folds
      - train.xgboost
      - train.random_forest
      - train.linear_regression
      # WAATTTTTCHHHH UOTTTTTT!!,,, enable the model output to be used
    outs:
      - models/xgboost/artifacts
      #- models/random_forest/artifacts
      #- models/linear_regression/artifacts

        # NUEVA etapa: orquestador con MLflow (varios modelos)
  train_suite:
    cmd: python -m src.pipelines.experiment_pipelines --params params.yaml
    deps:
      - src/pipelines/experiment_pipelines.py
      - src/pipelines/data_setup.py
      - src/utils/env.py
      - params.yaml
      - data/interim/features.csv
    outs:
      - reports
    params:
      - train.model_types
      - train.model_type
      - train.cv_folds
      - train.xgboost
      - train.random_forest
      - train.linear_regression
      - mlflow.register_model
      - mlflow.model_name
